syntax = "proto3";

package clientes;

import "google/protobuf/empty.proto";

message Cliente {
  string clienteId = 1;
  string nombre = 2;
  string email = 3;
  repeated string telefonos = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message Data {
  string nombre = 1;
  string email = 2;
  string telefono = 3;
}

message ResponseHeader {
  string message = 1;
  int32 status = 2;
  bool success = 3;
}

message ListarClientesResponse {
  ResponseHeader header = 1;
  repeated Cliente data = 2;
}

message ObtenerClientePorIdRequest {
  string clienteId = 1;
}

message ObtenerClientePorIdResponse {
  ResponseHeader header = 1;
  Cliente data = 2;
}

message CrearClienteRequest {
  string nombre = 1;
  string email = 2;
  string telefono = 3;
}

message CrearClienteResponse {
  ResponseHeader header = 1;
}

message ActualizarClienteRequest{
  string clienteId = 1;
  Data data = 2;
}

message ActualizarClienteResponse {
  ResponseHeader header = 1;
}

message AgregarTelefonoClienteRequest {
 string clienteId = 1;
 string telefono = 2;
}

message AgregarTelefonoClienteResponse {
  ResponseHeader header = 1;
}

message EliminarTelefonoClienteRequest {
  string clienteId = 1;
  string telefono = 2;
}

message EliminarTelefonoClienteResponse {
  ResponseHeader header = 1;
}

message EliminarClienteRequest{
  string clienteId = 1;
}

message EliminarClienteResponse{
  ResponseHeader header = 1;
}

service Clientes {
  rpc ListarClientes(google.protobuf.Empty) returns (ListarClientesResponse) {}
  rpc ObtenerClientePorId(ObtenerClientePorIdRequest) returns (ObtenerClientePorIdResponse) {}
  rpc CrearCliente(CrearClienteRequest) returns (CrearClienteResponse) {}
  rpc ActualizarCliente(ActualizarClienteRequest) returns (ActualizarClienteResponse) {}
  rpc AgregarTelefonoCliente(AgregarTelefonoClienteRequest) returns (AgregarTelefonoClienteResponse) {}
  rpc EliminarTelefonoCliente(EliminarTelefonoClienteRequest) returns (EliminarTelefonoClienteResponse) {}
  rpc EliminarCliente(EliminarClienteRequest) returns (EliminarClienteResponse) {}
}